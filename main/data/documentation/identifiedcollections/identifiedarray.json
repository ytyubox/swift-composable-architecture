{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ID"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similar to the standard "},{"type":"codeVoice","code":"Array"},{"type":"text","text":", identified arrays maintain their elements in a particular"},{"type":"text","text":" "},{"type":"text","text":"user-specified order, and they support efficient random access traversal of their members."},{"type":"text","text":" "},{"type":"text","text":"However, unlike "},{"type":"codeVoice","code":"Array"},{"type":"text","text":", identified arrays introduce the ability to uniquely identify elements,"},{"type":"text","text":" "},{"type":"text","text":"using a hash table to ensure that no two elements have the same identity, and to efficiently"},{"type":"text","text":" "},{"type":"text","text":"look up elements corresponding to specific identifiers."}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray"},{"type":"text","text":" is a useful alternative to "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" when you need to be able to efficiently"},{"type":"text","text":" "},{"type":"text","text":"access unique elements by a stable identifier. It is also a useful alternative to "},{"type":"codeVoice","code":"OrderedSet"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"where the "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" requirement may be too strict."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create an identified array with any element type that conforms to the "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":" "},{"type":"text","text":"protocol."}]},{"type":"codeListing","syntax":"swift","code":["struct User: Identifiable { var id: String }","var users: IdentifiedArray = [User(id: \"u_42\"), User(id: \"u_1729\")]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or you can provide a key path that describes an element‚Äôs identity:"}]},{"type":"codeListing","syntax":"swift","code":["var numbers = IdentifiedArray(id: \\Int.self)"]},{"anchor":"Motivation","level":1,"type":"heading","text":"Motivation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When modeling a collection of elements in your application‚Äôs state, it is easy to reach for a"},{"type":"text","text":" "},{"type":"text","text":"standard "},{"type":"codeVoice","code":"Array"},{"type":"text","text":". However, as your application becomes more complex, this approach can break"},{"type":"text","text":" "},{"type":"text","text":"down in many ways, including accidentally making mutations to the wrong elements or even"},{"type":"text","text":" "},{"type":"text","text":"crashing. üò¨"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if you were building a ‚ÄúTodos‚Äù application in SwiftUI, you might model an"},{"type":"text","text":" "},{"type":"text","text":"individual todo in an identifiable value type:"}]},{"type":"codeListing","syntax":"swift","code":["struct Todo: Identifiable {","  var description = \"\"","  let id: UUID","  var isComplete = false","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And you would hold an array of these todos as a published field in your app‚Äôs view model:"}]},{"type":"codeListing","syntax":"swift","code":["class TodosViewModel: ObservableObject {","  @Published var todos: [Todo] = []","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A view can render a list of these todos quite simply, and because they are identifiable we can"},{"type":"text","text":" "},{"type":"text","text":"even omit the "},{"type":"codeVoice","code":"id"},{"type":"text","text":" parameter of "},{"type":"codeVoice","code":"List"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["struct TodosView: View {","  @ObservedObject var viewModel: TodosViewModel","","  var body: some View {","    List(self.viewModel.todos) { todo in","      ...","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If your deployment target is set to the latest version of SwiftUI, you may be tempted to pass"},{"type":"text","text":" "},{"type":"text","text":"along a binding to the list so that each row is given mutable access to its todo. This will work"},{"type":"text","text":" "},{"type":"text","text":"for simple cases, but as soon as you introduce side effects, like API clients or analytics, or"},{"type":"text","text":" "},{"type":"text","text":"want to write unit tests, you must push this logic into a view model, instead. And that means"},{"type":"text","text":" "},{"type":"text","text":"each row must be able to communicate its actions back to the view model."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You could do so by introducing some endpoints on the view model, like when a row‚Äôs completed"},{"type":"text","text":" "},{"type":"text","text":"toggle is changed:"}]},{"type":"codeListing","syntax":"swift","code":["class TodosViewModel: ObservableObject {","  ...","  func todoCheckboxToggled(at id: Todo.ID) {","    guard let index = self.todos.firstIndex(where: { $0.id == id })","    else { return }","","    self.todos[index].isComplete.toggle()","    \/\/ TODO: Update todo on backend using an API client","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This code is simple enough, but it can require a full traversal of the array to do its job."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Perhaps it would be more performant for a row to communicate its index back to the view model"},{"type":"text","text":" "},{"type":"text","text":"instead, and then it could mutate the todo directly via its index subscript. But this makes the"},{"type":"text","text":" "},{"type":"text","text":"view more complicated:"}]},{"type":"codeListing","syntax":"swift","code":["List(self.viewModel.todos.enumerated(), id: \\.element.id) { index, todo in","  ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This isn‚Äôt so bad, but at the moment it doesn‚Äôt even compile. An"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0312-indexed-and-enumerated-zip-collections.md"},{"type":"text","text":" "},{"type":"text","text":"may change that soon, but in the meantime "},{"type":"codeVoice","code":"List"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" must be passed a"},{"type":"text","text":" "},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":", which is perhaps most simply achieved by constructing another array:"}]},{"type":"codeListing","syntax":"swift","code":["List(Array(self.viewModel.todos.enumerated()), id: \\.element.id) { index, todo in","  ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This compiles, but we‚Äôve just moved the performance problem to the view: every time this body is"},{"type":"text","text":" "},{"type":"text","text":"evaluated there‚Äôs the possibility a whole new array is being allocated."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"But even if it were possible to pass an enumerated collection directly to these views,"},{"type":"text","text":" "},{"type":"text","text":"identifying an element of mutable state by an index introduces a number of other problems."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"While it‚Äôs true that we can greatly simplify and improve the performance of any view model"},{"type":"text","text":" "},{"type":"text","text":"methods that mutate an element through its index subscript:"}]},{"type":"codeListing","syntax":"swift","code":["class TodosViewModel: ObservableObject {","  ...","  func todoCheckboxToggled(at index: Int) {","    self.todos[index].isComplete.toggle()","    \/\/ TODO: sync with API","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Any asynchronous work that we add to this endpoint must take great care in "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" using this"},{"type":"text","text":" "},{"type":"text","text":"index later on. An index is not a stable identifier: todos can be moved and removed at any time,"},{"type":"text","text":" "},{"type":"text","text":"and an index identifying ‚ÄúBuy lettuce‚Äù at one moment may identify ‚ÄúCall Mom‚Äù the next, or worse,"},{"type":"text","text":" "},{"type":"text","text":"may be a completely invalid index and crash your application!"}]},{"type":"codeListing","syntax":"swift","code":["class TodosViewModel: ObservableObject {","  ...","  func todoCheckboxToggled(at index: Int) async {","    self.todos[index].isComplete.toggle()","","    do {","      \/\/ ‚ùå Could update the wrong todo, or crash!","      self.todos[index] = try await self.apiClient.updateTodo(self.todos[index])","    } catch {","      \/\/ Handle error","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Whenever you need to access a particular todo after performing some asynchronous work, you"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" do the work of traversing the array:"}]},{"type":"codeListing","syntax":"swift","code":["class TodosViewModel: ObservableObject {","  ...","  func todoCheckboxToggled(at index: Int) async {","    self.todos[index].isComplete.toggle()","","    \/\/ 1Ô∏è‚É£ Get a reference to the todo's id before kicking off the async work","    let id = self.todos[index].id","","    do {","      \/\/ 2Ô∏è‚É£ Update the todo on the backend","      let updatedTodo = try await self.apiClient.updateTodo(self.todos[index])","","      \/\/ 3Ô∏è‚É£ Find the updated index of the todo after the async work is done","      let updatedIndex = self.todos.firstIndex(where: { $0.id == id })!","","      \/\/ 4Ô∏è‚É£ Update the correct todo","      self.todos[updatedIndex] = updatedTodo","    } catch {","      \/\/ Handle error","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Identified collections are designed to solve all of these problems by providing data structures"},{"type":"text","text":" "},{"type":"text","text":"for working with collections of identifiable elements in an ergonomic, performant way."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Most of the time, you can simply swap an "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" out for an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["import IdentifiedCollections","","class TodosViewModel: ObservableObject {","  @Published var todos: IdentifiedArrayOf<Todo> = []","  ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here we use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArrayOf"},{"type":"text","text":" generic over "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":" as a shorthand for"},{"type":"text","text":" "},{"type":"codeVoice","code":"IdentifiedArray<Todo.ID, Todo>"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And then you can mutate an element directly via its id-based subscript, no traversals needed,"},{"type":"text","text":" "},{"type":"text","text":"even after asynchronous work is performed:"}]},{"type":"codeListing","syntax":"swift","code":["class TodosViewModel: ObservableObject {","  ...","  func todoCheckboxToggled(at id: Todo.ID) async {","    self.todos[id: id]?.isComplete.toggle()","","    do {","      \/\/ 1Ô∏è‚É£ Update todo on backend and mutate it in the todos identified array.","      self.todos[id: id] = try await self.apiClient.updateTodo(self.todos[id: id]!)","    } catch {","      \/\/ Handle error","    }","","    \/\/ No step 2Ô∏è‚É£ üòÜ","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also simply pass the identified array to views like "},{"type":"codeVoice","code":"List"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" without any"},{"type":"text","text":" "},{"type":"text","text":"complications:"}]},{"type":"codeListing","syntax":"swift","code":["List(self.viewModel.todos) { todo in","  ...","}"]},{"anchor":"Sequence-and-Collection-Operations","level":1,"type":"heading","text":"Sequence and Collection Operations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Identified arrays are random-access collections. Members are assigned integer indices, with the"},{"type":"text","text":" "},{"type":"text","text":"first element always being at index "},{"type":"codeVoice","code":"0"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Because "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray"},{"type":"text","text":" needs to keep its members unique, it cannot conform to the full"},{"type":"text","text":" "},{"type":"codeVoice","code":"MutableCollection"},{"type":"text","text":" or "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":" protocols. Operations such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"MutableCollection"},{"type":"text","text":"‚Äôs subscript setter or "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":"‚Äôs "},{"type":"codeVoice","code":"replaceSubrange"},{"type":"text","text":" "},{"type":"text","text":"assume the ability to insert\/replace arbitrary elements in the collection, but allowing that"},{"type":"text","text":" "},{"type":"text","text":"could lead to duplicate values."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray"},{"type":"text","text":" is able to partially implement these two protocols; namely, there"},{"type":"text","text":" "},{"type":"text","text":"is no issue with mutation operations that merely change the order of elements, or just remove"},{"type":"text","text":" "},{"type":"text","text":"some subset of existing members:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Permutation operations from MutableCollection:","func swapAt(_ i: Int, _ j: Int)","func partition(by predicate: (Element) throws -> Bool) -> rethrows Int","func sort() where Element: Comparable","func sort(by predicate: (Element, Element) throws -> Bool) rethrows","func shuffle()","func shuffle<T: RandomNumberGenerator>(using generator: inout T)","func reverse()","","\/\/ Removal operations from RangeReplaceableCollection:","func removeAll(keepingCapacity: Bool = false)","func remove(at index: Int) -> Element","func removeSubrange(_ bounds: Range<Int>)","func removeLast() -> Element","func removeLast(_ n: Int)","func removeFirst() -> Element","func removeFirst(_ n: Int)","func removeAll(where shouldBeRemoved: (Element) throws -> Bool) rethrows"]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray"},{"type":"text","text":" also implements "},{"type":"codeVoice","code":"reserveCapacity(_)"},{"type":"text","text":" from "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":", to"},{"type":"text","text":" "},{"type":"text","text":"allow for efficient insertion of a known number of elements. (However, unlike "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Set"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"OrderedSet"},{"type":"text","text":" does not provide a "},{"type":"codeVoice","code":"capacity"},{"type":"text","text":" property.)"}]},{"anchor":"Performance","level":1,"type":"heading","text":"Performance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Like the standard "},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" type, the performance of hashing operations in"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray"},{"type":"text","text":" is highly sensitive to the quality of hashing implemented by the "},{"type":"codeVoice","code":"ID"},{"type":"text","text":" "},{"type":"text","text":"type. Failing to correctly implement hashing can easily lead to unacceptable performance, with"},{"type":"text","text":" "},{"type":"text","text":"the severity of the effect increasing with the size of the underlying hash table."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In particular, if a certain set of elements all produce the same hash value, then hash table"},{"type":"text","text":" "},{"type":"text","text":"lookups regress to searching an element in an unsorted array, i.e., a linear operation. To"},{"type":"text","text":" "},{"type":"text","text":"ensure hashed collection types exhibit their target performance, it is important to ensure that"},{"type":"text","text":" "},{"type":"text","text":"such collisions cannot be induced merely by adding a particular list of members to the set."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The easiest way to achieve this is to make sure "},{"type":"codeVoice","code":"ID"},{"type":"text","text":" implements hashing following "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"‚Äôs"},{"type":"text","text":" "},{"type":"text","text":"documented best practices. The conformance must implement the "},{"type":"codeVoice","code":"hash(into:)"},{"type":"text","text":" requirement, and"},{"type":"text","text":" "},{"type":"text","text":"every bit of information that is compared in "},{"type":"codeVoice","code":"=="},{"type":"text","text":" needs to be combined into the supplied"},{"type":"text","text":" "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" value. When used correctly, "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" produces high-quality, randomly seeded hash values"},{"type":"text","text":" "},{"type":"text","text":"that prevent repeatable hash collisions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"ID"},{"type":"text","text":" implements "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" correctly, testing for membership in an ordered set is expected"},{"type":"text","text":" "},{"type":"text","text":"to take O(1) equality checks on average. Hash collisions can still occur organically, so the"},{"type":"text","text":" "},{"type":"text","text":"worst-case lookup performance is technically still O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":") (where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the size of the set);"},{"type":"text","text":" "},{"type":"text","text":"however, long lookup chains are unlikely to occur in practice."}]},{"anchor":"Implementation-Details","level":2,"type":"heading","text":"Implementation Details"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An identified array consists of an ordered dictionary of id-element pairs. An element‚Äôs id"},{"type":"text","text":" "},{"type":"text","text":"should not be mutated in place, as it will drift from its associated dictionary key. Identified"},{"type":"text","text":" "},{"type":"text","text":"array is designed to avoid this invariant, with the exception of its "},{"type":"emphasis","inlineContent":[{"type":"text","text":"id-based"}]},{"type":"text","text":" subscript."},{"type":"text","text":" "},{"type":"text","text":"Mutating an element‚Äôs id will result in a runtime error."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/identifiedcollections\/identifiedarray"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/SK","doc:\/\/co.pointfree.ComposableArchitecture\/Sl","doc:\/\/co.pointfree.ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/co.pointfree.ComposableArchitecture\/s17CustomReflectableP","doc:\/\/co.pointfree.ComposableArchitecture\/s23CustomStringConvertibleP","doc:\/\/co.pointfree.ComposableArchitecture\/Se","doc:\/\/co.pointfree.ComposableArchitecture\/SE","doc:\/\/co.pointfree.ComposableArchitecture\/SQ","doc:\/\/co.pointfree.ComposableArchitecture\/s25ExpressibleByArrayLiteralP","doc:\/\/co.pointfree.ComposableArchitecture\/SH","doc:\/\/co.pointfree.ComposableArchitecture\/Sk","doc:\/\/co.pointfree.ComposableArchitecture\/ST"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An ordered collection of identifiable elements."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"}],"title":"IdentifiedArray","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:21IdentifiedCollections0A5ArrayV","modules":[{"name":"IdentifiedCollections"}],"navigatorTitle":[{"kind":"identifier","text":"IdentifiedArray"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init()","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(_:)-4kn9a","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(_:)-4lqng","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(_:)-5jn74","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(_:id:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(id:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(uncheckedUniqueElements:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(uncheckedUniqueElements:id:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(uniqueElements:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(uniqueElements:id:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/elements","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/id","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/ids"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/append(_:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/append(contentsOf:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/contains(_:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/filter(_:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/index(id:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/insert(_:at:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/move(fromOffsets:toOffset:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/partition(by:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/remove(_:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/remove(at:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/remove(atOffsets:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/remove(id:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeAll(keepingCapacity:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeAll(where:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeFirst()","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeFirst(_:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeLast()","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeLast(_:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeSubrange(_:)-18qiq","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeSubrange(_:)-7lj8j","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/replaceSubrange(_:with:)-5x9le","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/replaceSubrange(_:with:)-gae7","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/reserveCapacity(_:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/reverse()","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/shuffle()","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/shuffle(using:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/sort()","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/sort(by:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/swapAt(_:_:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/update(_:at:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/updateOrAppend(_:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/updateOrInsert(_:at:)"]},{"title":"Subscripts","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/subscript(id:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/BidirectionalCollection-Implementations","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/Collection-Implementations","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/CustomDebugStringConvertible-Implementations","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/CustomReflectable-Implementations","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/CustomStringConvertible-Implementations","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/Decodable-Implementations","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/Encodable-Implementations","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/Equatable-Implementations","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/ExpressibleByArrayLiteral-Implementations","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/Hashable-Implementations","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/RandomAccessCollection-Implementations","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/Sequence-Implementations"],"generated":true}],"references":{"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/Encodable-Implementations":{"role":"collectionGroup","title":"Encodable Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/Encodable-Implementations","kind":"article","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/encodable-implementations"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/elements":{"role":"symbol","title":"elements","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"elements"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"A read-only collection view for the elements contained in this array, as an "},{"type":"codeVoice","code":"Array"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/elements","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/elements"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/updateOrAppend(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"updateOrAppend(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateOrAppend"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Adds the given element to the array unconditionally, either appending it to the array, or"},{"type":"text","text":" "},{"type":"text","text":"replacing an existing value if it‚Äôs already present."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/updateOrAppend(_:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/updateorappend(_:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/shuffle()":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"shuffle()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shuffle"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Shuffles the collection in place."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/shuffle()","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/shuffle()"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/append(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"append(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":") -> (inserted"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Append a new member to the end of the array, if the array doesn‚Äôt already contain it."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/append(_:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/append(_:)"},"doc://co.pointfree.ComposableArchitecture/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/Se"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections":{"role":"collection","title":"IdentifiedCollections","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/init(uncheckedUniqueElements:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Element.ID"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(uncheckedUniqueElements:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"uncheckedUniqueElements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayVAA2IDQy_Rszs12IdentifiableR_rlE23uncheckedUniqueElementsACyxq_Gqd___tc7ElementQyd__Rs_STRd__lufc1SL_qd__mfp"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new array from the elements in the given sequence, which must not contain duplicate"},{"type":"text","text":" "},{"type":"text","text":"ids."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(uncheckedUniqueElements:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/init(uncheckeduniqueelements:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/ids":{"role":"symbol","title":"ids","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"ids"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OrderedSet","preciseIdentifier":"s:18OrderedCollections0A3SetV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV2IDxmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A read-only collection view for the ids contained in this array, as an "},{"type":"codeVoice","code":"OrderedSet"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/ids","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/ids"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/init(uniqueElements:id:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(uniqueElements:id:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"uniqueElements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV14uniqueElements2idACyxq_Gqd___s7KeyPathCyq_xGtc7ElementQyd__Rs_STRd__lufc1SL_qd__mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV2IDxmfp"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Creates a new array from the elements in the given sequence."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(uniqueElements:id:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/init(uniqueelements:id:)"},"doc://co.pointfree.ComposableArchitecture/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/s28CustomDebugStringConvertibleP"},"doc://co.pointfree.ComposableArchitecture/s25ExpressibleByArrayLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/s25ExpressibleByArrayLiteralP"},"https://github.com/apple/swift-evolution/blob/main/proposals/0312-indexed-and-enumerated-zip-collections.md":{"title":"evolution proposal","titleInlineContent":[{"type":"text","text":"evolution proposal"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0312-indexed-and-enumerated-zip-collections.md","url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0312-indexed-and-enumerated-zip-collections.md"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/removeSubrange(_:)-7lj8j":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"removeSubrange(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeSubrange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV14removeSubrangeyyqd__SXRd__Si5BoundRtd__lF1RL_qd__mfp"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Removes the specified subrange of elements from the collection."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeSubrange(_:)-7lj8j","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/removesubrange(_:)-7lj8j"},"doc://co.pointfree.ComposableArchitecture/Sk":{"type":"unresolvable","title":"Swift.RandomAccessCollection","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/Sk"},"doc://co.pointfree.ComposableArchitecture/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/SH"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/init(_:)-5jn74":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(`Self`"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new array from an existing array. This is functionally the same as copying the value"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"elements"},{"type":"text","text":" into a new variable."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(_:)-5jn74","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/init(_:)-5jn74"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/init(_:id:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(_:id:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV_2idACyxq_Gqd___s7KeyPathCyq_xGtc7ElementQyd__Rs_STRd__lufc1SL_qd__mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV2IDxmfp"},{"kind":"text","text":">)"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(_:id:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/identifiedcollections\/identifiedarray\/init(_:id:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/removeLast(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"removeLast(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeLast"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Removes the last "},{"type":"codeVoice","code":"n"},{"type":"text","text":" element of the set."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeLast(_:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/removelast(_:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/sort()":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"sort()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sort"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Sorts the set in place."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/sort()","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/sort()"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/append(contentsOf:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"append(contentsOf:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"contentsOf"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV6append10contentsOfyqd___t7ElementQyd__Rs_STRd__lF1SL_qd__mfp"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/append(contentsOf:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/identifiedcollections\/identifiedarray\/append(contentsof:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/update(_:at:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"update(_:at:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"update"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"}],"abstract":[{"type":"text","text":"Replace the member at the given index with a new value of the same identity."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/update(_:at:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/update(_:at:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/init()":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Element.ID"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates an empty array."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init()","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/init()"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/index(id:)":{"role":"symbol","title":"index(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV2IDxmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the index for the given id."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/index(id:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/index(id:)"},"doc://co.pointfree.ComposableArchitecture/ST":{"type":"unresolvable","title":"Swift.Sequence","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/ST"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/init(uncheckedUniqueElements:id:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(uncheckedUniqueElements:id:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"uncheckedUniqueElements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV23uncheckedUniqueElements2idACyxq_Gqd___s7KeyPathCyq_xGtc7ElementQyd__Rs_STRd__lufc1SL_qd__mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV2IDxmfp"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Creates a new array from the elements in the given sequence, which must not contain duplicate"},{"type":"text","text":" "},{"type":"text","text":"ids."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(uncheckedUniqueElements:id:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/init(uncheckeduniqueelements:id:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/remove(at:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"remove(at:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"}],"abstract":[{"type":"text","text":"Removes and returns the element at the specified position."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/remove(at:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/remove(at:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/reserveCapacity(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"reserveCapacity(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reserveCapacity"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reserves enough space to store the specified number of elements."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/reserveCapacity(_:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/reservecapacity(_:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/Sequence-Implementations":{"role":"collectionGroup","title":"Sequence Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/Sequence-Implementations","kind":"article","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/sequence-implementations"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/updateOrInsert(_:at:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"updateOrInsert(_:at:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateOrInsert"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> (originalMember"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":"?, index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds the given element into the set unconditionally, either inserting it at the specified"},{"type":"text","text":" "},{"type":"text","text":"index, or replacing an existing value if it‚Äôs already present."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/updateOrInsert(_:at:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/updateorinsert(_:at:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/partition(by:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"partition(by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"partition"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Reorders the elements of the array such that all the elements that match the given predicate"},{"type":"text","text":" "},{"type":"text","text":"are after all the elements that don‚Äôt match."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/partition(by:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/partition(by:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/contains(_:)":{"role":"symbol","title":"contains(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contains"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/contains(_:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/contains(_:)"},"doc://co.pointfree.ComposableArchitecture/Sl":{"type":"unresolvable","title":"Swift.Collection","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/Sl"},"doc://co.pointfree.ComposableArchitecture/s17CustomReflectableP":{"type":"unresolvable","title":"Swift.CustomReflectable","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/s17CustomReflectableP"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/shuffle(using:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"shuffle(using:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shuffle"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7shuffle5usingyqd__z_tSGRd__lF1TL_qd__mfp"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Shuffles the collection in place, using the given generator as a source for randomness."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/shuffle(using:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/shuffle(using:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/removeLast()":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"removeLast()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeLast"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"}],"abstract":[{"type":"text","text":"Removes the last element of a non-empty array."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeLast()","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/removelast()"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/Decodable-Implementations":{"role":"collectionGroup","title":"Decodable Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/Decodable-Implementations","kind":"article","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/decodable-implementations"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray":{"role":"symbol","title":"IdentifiedArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"}],"abstract":[{"type":"text","text":"An ordered collection of identifiable elements."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IdentifiedArray"}],"url":"\/documentation\/identifiedcollections\/identifiedarray"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/Collection-Implementations":{"role":"collectionGroup","title":"Collection Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/Collection-Implementations","kind":"article","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/collection-implementations"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/move(fromOffsets:toOffset:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"move(fromOffsets:toOffset:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"move"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fromOffsets"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IndexSet","preciseIdentifier":"s:10Foundation8IndexSetV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toOffset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Moves all the elements at the specified offsets to the specified destination offset,"},{"type":"text","text":" "},{"type":"text","text":"preserving ordering."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/move(fromOffsets:toOffset:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/move(fromoffsets:tooffset:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/swapAt(_:_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"swapAt(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"swapAt"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Exchanges the values at the specified indices of the array."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/swapAt(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/swapat(_:_:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/remove(_:)":{"role":"symbol","title":"remove(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Removes the given element from the array."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/remove(_:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/remove(_:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/ExpressibleByArrayLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByArrayLiteral Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/ExpressibleByArrayLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/expressiblebyarrayliteral-implementations"},"doc://co.pointfree.ComposableArchitecture/SK":{"type":"unresolvable","title":"Swift.BidirectionalCollection","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/SK"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/removeAll(where:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"removeAll(where:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAll"},{"kind":"text","text":"("},{"kind":"externalParam","text":"where"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"abstract":[{"type":"text","text":"Removes all the elements that satisfy the given predicate."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeAll(where:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/removeall(where:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomDebugStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/CustomDebugStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/customdebugstringconvertible-implementations"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/id":{"role":"symbol","title":"id","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV2IDxmfp"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/id","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/id"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/CustomStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/CustomStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/customstringconvertible-implementations"},"doc://co.pointfree.ComposableArchitecture/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/SE"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/removeFirst()":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"removeFirst()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeFirst"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"}],"abstract":[{"type":"text","text":"Removes the first element of a non-empty array."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeFirst()","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/removefirst()"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/BidirectionalCollection-Implementations":{"role":"collectionGroup","title":"BidirectionalCollection Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/BidirectionalCollection-Implementations","kind":"article","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/bidirectionalcollection-implementations"},"doc://co.pointfree.ComposableArchitecture/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/s23CustomStringConvertibleP"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/equatable-implementations"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/removeAll(keepingCapacity:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"removeAll(keepingCapacity:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAll"},{"kind":"text","text":"("},{"kind":"externalParam","text":"keepingCapacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Removes all members from the set."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeAll(keepingCapacity:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/removeall(keepingcapacity:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/removeFirst(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"removeFirst(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeFirst"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Removes the first "},{"type":"codeVoice","code":"n"},{"type":"text","text":" elements of the collection."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeFirst(_:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/removefirst(_:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/remove(id:)":{"role":"symbol","title":"remove(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV2IDxmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Removes the element identified by the given id from the array."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/remove(id:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/remove(id:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/remove(atOffsets:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"remove(atOffsets:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atOffsets"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IndexSet","preciseIdentifier":"s:10Foundation8IndexSetV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Removes all the elements at the specified offsets from the collection."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/remove(atOffsets:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/remove(atoffsets:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/sort(by:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"sort(by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sort"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"abstract":[{"type":"text","text":"Sorts the collection in place, using the given predicate as the comparison between elements."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/sort(by:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/sort(by:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/removeSubrange(_:)-18qiq":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"removeSubrange(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeSubrange"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Removes the specified subrange of elements from the collection."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/removeSubrange(_:)-18qiq","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/removesubrange(_:)-18qiq"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/subscript(id:)":{"role":"symbol","title":"subscript(id:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV2IDxmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Accesses the value associated with the given id for reading and writing."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/subscript(id:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/subscript(id:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/Hashable-Implementations":{"role":"collectionGroup","title":"Hashable Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/Hashable-Implementations","kind":"article","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/hashable-implementations"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/replaceSubrange(_:with:)-gae7":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"replaceSubrange(_:with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceSubrange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV15replaceSubrange_4withyqd_0__qd__t7ElementQyd__Rs_SlRd__SXRd_0_Si5BoundRtd_0_r0_lF1RL_qd_0_mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV15replaceSubrange_4withyqd_0__qd__t7ElementQyd__Rs_SlRd__SXRd_0_Si5BoundRtd_0_r0_lF1CL_qd__mfp"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/replaceSubrange(_:with:)-gae7","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/identifiedcollections\/identifiedarray\/replacesubrange(_:with:)-gae7"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/filter(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"filter(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"IdentifiedArray","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a new array containing the elements of the array that satisfy the given predicate."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/filter(_:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/filter(_:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/CustomReflectable-Implementations":{"role":"collectionGroup","title":"CustomReflectable Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/CustomReflectable-Implementations","kind":"article","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/customreflectable-implementations"},"doc://co.pointfree.ComposableArchitecture/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/SQ"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/insert(_:at:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"insert(_:at:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> (inserted"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Insert a new member to this array at the specified index, if the array doesn‚Äôt already contain"},{"type":"text","text":" "},{"type":"text","text":"it."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/insert(_:at:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/insert(_:at:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/replaceSubrange(_:with:)-5x9le":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"replaceSubrange(_:with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceSubrange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV5Indexa"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV15replaceSubrange_4withySnySiG_qd__t7ElementQyd__Rs_SlRd__lF1CL_qd__mfp"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/replaceSubrange(_:with:)-5x9le","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/identifiedcollections\/identifiedarray\/replacesubrange(_:with:)-5x9le"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/init(_:)-4lqng":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sk11SubSequenceQa"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new set from an existing slice of another dictionary."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(_:)-4lqng","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/init(_:)-4lqng"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/init(id:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(id:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV7Elementq_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV2IDxmfp"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Creates an empty array."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(id:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/init(id:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/reverse()":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"reverse()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reverse"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Reverses the elements of the array in place."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/reverse()","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/reverse()"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/init(uniqueElements:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Element.ID"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(uniqueElements:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"uniqueElements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayVAA2IDQy_Rszs12IdentifiableR_rlE14uniqueElementsACyxq_Gqd___tc7ElementQyd__Rs_STRd__lufc1SL_qd__mfp"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new array from the elements in the given sequence."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(uniqueElements:)","kind":"symbol","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/init(uniqueelements:)"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/RandomAccessCollection-Implementations":{"role":"collectionGroup","title":"RandomAccessCollection Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/RandomAccessCollection-Implementations","kind":"article","type":"topic","url":"\/documentation\/identifiedcollections\/identifiedarray\/randomaccesscollection-implementations"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArrayOf":{"role":"symbol","title":"IdentifiedArrayOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArrayOf"}],"abstract":[{"type":"text","text":"A convenience type alias that specifies an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray"},{"type":"text","text":" by an element conforming to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":" protocol."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArrayOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IdentifiedArrayOf"}],"url":"\/documentation\/identifiedcollections\/identifiedarrayof"},"doc://co.pointfree.ComposableArchitecture/documentation/IdentifiedCollections/IdentifiedArray/init(_:)-4kn9a":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Element.ID"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayVAA2IDQy_Rszs12IdentifiableR_rlEyACyxq_Gqd__c7ElementQyd__Rs_STRd__lufc1SL_qd__mfp"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/IdentifiedCollections\/IdentifiedArray\/init(_:)-4kn9a","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/identifiedcollections\/identifiedarray\/init(_:)-4kn9a"}}}
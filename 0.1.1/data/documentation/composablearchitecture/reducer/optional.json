{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"optional"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerV","text":"Reducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Often used in tandem with "},{"type":"codeVoice","code":"pullback"},{"type":"text","text":" to transform a reducer on a non-optional local domain"},{"type":"text","text":" "},{"type":"text","text":"into a reducer on a global domain that contains an optional local domain:"}]},{"type":"codeListing","syntax":null,"code":["\/\/ Global domain that holds an optional local domain:","struct AppState { var modal: ModalState? }","struct AppAction { case modal(ModalAction) }","struct AppEnvironment { var mainQueue: AnySchedulerOf<DispatchQueue> }","","\/\/ A reducer that works on the non-optional local domain:","let modalReducer = Reducer<ModalState, ModalAction, ModalEnvironment { ... }","","\/\/ Pullback the local modal reducer so that it works on all of the app domain:","let appReducer: Reducer<AppState, AppAction, AppEnvironment> =","  modalReducer.optional.pullback(","    state: \\.modal,","    action: \/AppAction.modal,","    environment: { ModalEnvironment(mainQueue: $0.mainQueue) }","  )"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"See also: "},{"type":"codeVoice","code":"IfLetStore"},{"type":"text","text":", a SwiftUI helper for transforming a store on optional state into a"},{"type":"text","text":" "},{"type":"text","text":"store on non-optional state."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"See also: "},{"type":"codeVoice","code":"Store.ifLet"},{"type":"text","text":", a UIKit helper for doing imperative work with a store on optional"},{"type":"text","text":" "},{"type":"text","text":"state."}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/reducer\/optional"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/optional","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Transforms a reducer that works on non-optional state into one that works on optional state by"},{"type":"text","text":" "},{"type":"text","text":"only running the non-optional reducer when state is non-nil."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"optional"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">"}],"title":"optional","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:22ComposableArchitecture7ReducerV8optionalACyxSgq_q0_Gvp","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"]]},"references":{"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Reducer/optional":{"role":"symbol","title":"optional","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"optional"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Transforms a reducer that works on non-optional state into one that works on optional state by"},{"type":"text","text":" "},{"type":"text","text":"only running the non-optional reducer when state is non-nil."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/optional","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/optional"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"type":"text","text":"A reducer describes how to evolve the current state of an application to the next state, given"},{"type":"text","text":" "},{"type":"text","text":"an action, and describes what "},{"type":"codeVoice","code":"Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer"}}}
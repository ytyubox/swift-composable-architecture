{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"work"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">."},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/Subscriber","preciseIdentifier":"s:22ComposableArchitecture6EffectV10SubscriberV","text":"Subscriber"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Cancellable","preciseIdentifier":"s:7Combine11CancellableP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"work","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that accepts a "},{"type":"codeVoice","code":"Subscriber"},{"type":"text","text":" value and returns a cancellable. When"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Effect"},{"type":"text","text":" is completed, the cancellable will be used to clean up any resources created"},{"type":"text","text":" "},{"type":"text","text":"when the effect was started."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer is useful for bridging callback APIs, delegate APIs, and manager APIs to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Effect"},{"type":"text","text":" type. One can wrap those APIs in an Effect so that its events are sent through the"},{"type":"text","text":" "},{"type":"text","text":"effect, which allows the reducer to handle them."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, one can create an effect to ask for access to "},{"type":"codeVoice","code":"MPMediaLibrary"},{"type":"text","text":". It can start by"},{"type":"text","text":" "},{"type":"text","text":"sending the current status immediately, and then if the current status is "},{"type":"codeVoice","code":"notDetermined"},{"type":"text","text":" it"},{"type":"text","text":" "},{"type":"text","text":"can request authorization, and once a status is received it can send that back to the effect:"}]},{"type":"codeListing","syntax":null,"code":["Effect.run { subscriber in","  subscriber.send(MPMediaLibrary.authorizationStatus())","","  guard MPMediaLibrary.authorizationStatus() == .notDetermined else {","    subscriber.send(completion: .finished)","    return AnyCancellable {}","  }","","  MPMediaLibrary.requestAuthorization { status in","    subscriber.send(status)","    subscriber.send(completion: .finished)","  }","  return AnyCancellable {","    \/\/ Typically clean up resources that were created here, but this effect doesn't","    \/\/ have any.","  }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/effect\/run(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Initializes an effect from a callback that can send as many values as it wants, and can send"},{"type":"text","text":" "},{"type":"text","text":"a completion."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Subscriber","preciseIdentifier":"s:22ComposableArchitecture6EffectV10SubscriberV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Cancellable","preciseIdentifier":"s:7Combine11CancellableP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"title":"run(_:)","roleHeading":"Type Method","role":"symbol","symbolKind":"method","externalID":"s:22ComposableArchitecture6EffectV3runyACyxq_G7Combine11Cancellable_pAC10SubscriberVyxq__GcFZ","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"]]},"references":{"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Effect/run(_:)":{"role":"symbol","title":"run(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Subscriber","preciseIdentifier":"s:22ComposableArchitecture6EffectV10SubscriberV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Cancellable","preciseIdentifier":"s:7Combine11CancellableP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Initializes an effect from a callback that can send as many values as it wants, and can send"},{"type":"text","text":" "},{"type":"text","text":"a completion."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(_:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/effect\/run(_:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Effect/Subscriber":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"Effect.Subscriber","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Subscriber"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/Subscriber","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Subscriber"}],"url":"\/documentation\/composablearchitecture\/effect\/subscriber"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"role":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Effect"},{"type":"text","text":" type encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"data back to the "},{"type":"codeVoice","code":"Store"},{"type":"text","text":". It is the perfect place to do side effects, such as network requests,"},{"type":"text","text":" "},{"type":"text","text":"saving\/loading from disk, creating timers, interacting with dependencies, and more."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"}}}
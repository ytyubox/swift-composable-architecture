{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireAndForget"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An effect."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is useful for times you have an "},{"type":"codeVoice","code":"Effect<Never, Failure>"},{"type":"text","text":" but need to massage it into"},{"type":"text","text":" "},{"type":"text","text":"another type in order to return it from a reducer:"}]},{"type":"codeListing","syntax":null,"code":["case .buttonTapped:","  return analyticsClient.track(\"Button Tapped\")","    .fireAndForget()"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/effect\/fireandforget()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/fireAndForget()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Upcasts an "},{"type":"codeVoice","code":"Effect<Never, Failure>"},{"type":"text","text":" to an "},{"type":"codeVoice","code":"Effect<T, Failure>"},{"type":"text","text":" for any type "},{"type":"codeVoice","code":"T"},{"type":"text","text":". This is"},{"type":"text","text":" "},{"type":"text","text":"possible to do because an "},{"type":"codeVoice","code":"Effect<Never, Failure>"},{"type":"text","text":" can never produce any values to feed back"},{"type":"text","text":" "},{"type":"text","text":"into the store (hence the name “fire and forget”), and therefore we can act like it’s an"},{"type":"text","text":" "},{"type":"text","text":"effect that produces values of any type (since it never produces values)."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Failure"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"fireAndForget()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireAndForget"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:22ComposableArchitecture6EffectVAAs5NeverORszrlE13fireAndForgetACyqd__q_GylF","extendedModule":"ComposableArchitecture","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"]]},"references":{"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Effect/fireAndForget()":{"conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Failure"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"fireAndForget()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireAndForget"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Upcasts an "},{"type":"codeVoice","code":"Effect<Never, Failure>"},{"type":"text","text":" to an "},{"type":"codeVoice","code":"Effect<T, Failure>"},{"type":"text","text":" for any type "},{"type":"codeVoice","code":"T"},{"type":"text","text":". This is"},{"type":"text","text":" "},{"type":"text","text":"possible to do because an "},{"type":"codeVoice","code":"Effect<Never, Failure>"},{"type":"text","text":" can never produce any values to feed back"},{"type":"text","text":" "},{"type":"text","text":"into the store (hence the name “fire and forget”), and therefore we can act like it’s an"},{"type":"text","text":" "},{"type":"text","text":"effect that produces values of any type (since it never produces values)."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/fireAndForget()","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/effect\/fireandforget()"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"role":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Effect"},{"type":"text","text":" type encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"data back to the "},{"type":"codeVoice","code":"Store"},{"type":"text","text":". It is the perfect place to do side effects, such as network requests,"},{"type":"text","text":" "},{"type":"text","text":"saving\/loading from disk, creating timers, interacting with dependencies, and more."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect"}}}